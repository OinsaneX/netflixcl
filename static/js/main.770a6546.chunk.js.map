{"version":3,"sources":["Tmdb.js","components/MovieRow/MovieRow.js","components/FeaturedMovie/FeaturedMovie.js","components/Header/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setscrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","App","movieList","setMovieList","featuredData","setfeaturedData","blackHeader","setblackHeader","useEffect","Tmdb","list","originals","filter","randomChosem","floor","random","chosen","choseninfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.770a6546.chunk.js","sourcesContent":["const API_KEY= 'a943ff768127854b6ef1e5a26db52a14';\r\nconst API_BASE='https://api.themoviedb.org/3';\r\n\r\n\r\n/**\r\n original da netflix\r\n recomendados(trending)\r\n em alta (top rated)\r\n açao\r\n comedia\r\n terror\r\n romance\r\n documentarios\r\n\r\n  \r\n */\r\n\r\n const basicFetch =async (endpoint)=>{\r\n     const req = await fetch(`${API_BASE}${endpoint}`);\r\n     const json = await req.json();\r\n     return json;\r\n }\r\n\r\n\r\n\r\nexport default {\r\n\r\n  \r\n   getHomeList:async ()=>{\r\n       return[{\r\n           slug:'originals',\r\n           title: 'Originais da Netflix',\r\n           items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n       },\r\n    {\r\n        slug:'trending',\r\n        title: 'Recomendados ',\r\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n    }, {\r\n        slug:'toprated',\r\n        title: 'Em alta ',\r\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n    }, {\r\n        slug:'action',\r\n        title: 'Açao ',\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n    },{\r\n        slug:'comedy',\r\n        title: 'Comedia ',\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n    }, {\r\n        slug:'horror',\r\n        title: 'Terror ',\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n    }, {\r\n        slug:'romance',\r\n        title: 'Romance ',\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n    }, {\r\n        slug:'documentary',\r\n        title: 'Documentario ',\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n    }\r\n    ]\r\n   },\r\n\r\n\r\n   getMovieInfo: async(movieId,type)=>{\r\n    let info ={}\r\n        if (movieId) {\r\n            switch (type) {\r\n                case \"movie\":\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                    break;\r\n                    case \"tv\":\r\n                        info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n                    break;\r\n            default:\r\n                info = null;\r\n                break;\r\n               \r\n            }\r\n        \r\n    }\r\n    return info\r\n   }\r\n}","import React,{useState} from 'react'\r\nimport'./MovieRow.css'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nfunction MovieRow({title,items}) {\r\nconst [scrollX, setscrollX] = useState(0)\r\nconst handleLeftArrow = ()=>{\r\nif(scrollX!==0){\r\n    let x = scrollX + Math.round(window.innerWidth/2)\r\n    if(x>0){\r\n        x=0\r\n    }\r\n    setscrollX(x)\r\n}\r\n}\r\nconst handleRightArrow=()=>{\r\n    let x = scrollX - Math.round(window.innerWidth/2);\r\n    let listW = items.results.length * 150;\r\n    if((window.innerWidth - listW)>x){\r\n        x = (window.innerWidth - listW) - 60\r\n    }\r\n    setscrollX(x)\r\n }\r\n\r\n    return (\r\n    <div className=\"movieRow\">\r\n        <h2>{title}</h2>\r\n<div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n<NavigateBeforeIcon style={{fontSize:50}}/>\r\n</div>\r\n<div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n<NavigateNextIcon style={{fontSize:50}}/>\r\n</div>\r\n\r\n        <div className=\"movieRow--listarea\" style={{\r\n            marginLeft:scrollX,\r\n            width: items.results.length * 160\r\n        }}>\r\n\r\n            <div className=\"movieRow--list\">\r\n            {items.results.map((item,key)=>(\r\n                <div  key={key} className=\"movieRow--item\">\r\n                <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n\r\n                </div>\r\n           ))}\r\n            </div>\r\n      \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MovieRow\r\n","import React from 'react'\r\nimport './FeaturedMovie.css'\r\nfunction FeaturedMovie({item}) {\r\n\r\n\r\nlet firstDate = new Date(item.first_air_date);\r\nlet genres = []\r\nfor (let i in item.genres ){\r\n    genres.push(item.genres[i].name)\r\n}\r\nlet description = item.overview;\r\nif(description.length > 200){\r\n    description = description.substring(0,200)+' ...';\r\n}\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n    <div className=\"featured--vertical\">\r\n    <div className=\"featured--horizontal\">\r\n        <div className=\"featured--name\">{item.original_name}</div>\r\n        <div className=\"featured--info\">\r\n            <div className=\"featured--points\">\r\n            {item.vote_average} Pontos\r\n            </div>\r\n            <div className=\"featured--year\">\r\n            {firstDate.getFullYear()}\r\n            </div>\r\n            <div className=\"featured--seasons\">\r\n            {item.number_of_seasons} Temporada{item.number_of_seasons!==1 ? 's': ''}\r\n            </div>\r\n            <div className=\"featured--description\">\r\n                {description}\r\n            </div>\r\n            <div className=\"featured--buttons\">\r\n                <a className=\"featured--watchbutton\" href={`/watch/${item.id}`}>► Assistir</a>\r\n                <a className=\"featured--mylistbutton\" href={`/list/${item.id}`}>+ Minha Lista</a>\r\n            </div>\r\n            <div className=\"featured--genres\">\r\n    <strong>Genres: </strong>\r\n    {genres.join(', ')}\r\n            </div>\r\n            </div>\r\n\r\n    </div>\r\n    </div> \r\n           </section>\r\n    )\r\n}\r\n\r\nexport default FeaturedMovie\r\n","import React from 'react'\r\nimport './Header.css'\r\nfunction Header({black}) {\r\n    return (\r\n        <header  className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"usuario\"/>\r\n                </a>\r\n            </div>\r\n         </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie/FeaturedMovie'\nimport Header from './components/Header/Header'\nfunction App() {\n\n const [movieList, setMovieList] = useState([]);\n const [featuredData, setfeaturedData] = useState(null)\nconst [blackHeader, setblackHeader] = useState(false);\nuseEffect(()=>{\nconst loadAll=async ()=>{\n  //getting a list\n  let list = await Tmdb.getHomeList();\nsetMovieList(list);\n//featured\nlet originals = list.filter(i=>i.slug === \"originals\")\nlet randomChosem = Math.floor(Math.random()*(originals[0].items.results.length-1))\nlet chosen = originals[0].items.results[randomChosem];\nlet choseninfo = await Tmdb.getMovieInfo(chosen.id,'tv')\nsetfeaturedData(choseninfo)\n}\nloadAll()\n},[]); \n\nuseEffect(()=>{\nconst scrollListener = ()=>{\nif(window.scrollY>30){\n  setblackHeader(true)\n}else{\n  setblackHeader(false)\n}\n}\n\nwindow.addEventListener('scroll',scrollListener);\nreturn ()=>{\n  window.removeEventListener('scroll',scrollListener)\n}\n},[]);\n\n  return (\n  <div className=\"page\">\n    <Header black ={blackHeader}/>\n   {featuredData && <FeaturedMovie item= {featuredData}/>} \n   <section className=\"lists\">\n     {movieList.map((item,key)=>(\n      <MovieRow key={key} title={item.title} items={item.items}/>\n     )\n     )}\n   </section>\n\n   <footer>\n     Feito com <span role=\"img\" aria-label=\"coraçao\">💖</span> por Alejandro <br/>\n     Direito de imagen para Netflix <br/>\n     Dados pegos do site ThemovieDb.org\n   </footer>\n\n   {movieList.length <=0 &&\n   <div className=\"loading\">\n     <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"/>\n   </div>\n}\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}